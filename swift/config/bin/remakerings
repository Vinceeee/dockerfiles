#!/bin/bash

#set -e

POWER=6
REPLICAS=2
devices="st1 st2 st3"
LOOP_DISK=$LOOP
builders="account.builder container.builder object.builder object-1.builder"

mkdir -p /srv/node
if [[ $LOCAL -eq "True" ]];then
    truncate -s 2GB /srv/swift-disk
    mount /srv/swift-disk /srv/node
fi
chown -R swift:swift /srv/node

cd /etc/swift
rm -f *.builder *.ring.gz backups/*.builder backups/*.ring.gz

# create swift ring builders
swift-ring-builder account.builder create $POWER $REPLICAS 1
swift-ring-builder container.builder create $POWER $REPLICAS 1
swift-ring-builder object.builder create $POWER $REPLICAS 1
swift-ring-builder object-1.builder create $POWER $REPLICAS 1

for dev in $devices;do
    mkdir -p /srv/node/$dev
#   mount /dev/$dev /srv/node/$dev 
    swift-ring-builder account.builder add r1z1-0.0.0.0:6012/$dev 1
    swift-ring-builder container.builder add r1z1-0.0.0.0:6011/$dev 1
    swift-ring-builder object.builder add r1z1-0.0.0.0:6010/$dev 1
    swift-ring-builder object-1.builder add r1z1-0.0.0.0:6010/$dev 1
done

for each in $builders;
do
    swift-ring-builder $each rebalance
done

# build some cache
mkdir -p /var/cache/swift
chown -R swift:swift /var/cache

swift-init all start

exec '$@'

